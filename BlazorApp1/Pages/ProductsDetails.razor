@page "/Product/{slug}"

@using BlazorApp1.Libraries.Products.Module
@using BlazorApp1.Libraries.Products
@using BlazorApp1.Libraries.ShoppingCart

@inject IProductServices _productServices
@inject IShoppingCartService _shoppingCartService

@if(product != null)
{
    <PageTitle>@product.Name</PageTitle>    
}

@if(product == null)
{
    <div class="alert alert-warning" style="font-family:'B Yekan'">
        <h3>کالای مورد نظر یافت نشد</h3>
    </div>
}
else
{
<div class="row">
    <div class="col-3" style="padding-top:51px">
        <img src="/Images/@product.ImageUrl" class="img-thumbnail" style="width:100%;"/>
    </div>
    <div class="col-9" style="font-family:'B Yekan'">
        <h2>@product.Name</h2>
        <hr />
            @if (_shoppingCartService.Count() > 0)
            {
                <p>کالا های موجود در سبد خرید : @_shoppingCartService.Count() می باشد</p>
            }
            <div style="display:flex; flex-direction:row; column-gap:15px; width:300px; ">
                <MudText Class="text-success" Typo="Typo.body2" Style="font-family:'B Yekan';font-weight:800; margin-top:6px">قیمت: @product.Price $</MudText>
                <input @bind="Quantity" type="number" placeholder="تعداد؟" class="form-control" min="1" style="font-family:'B Yekan';font-weight:800;width:54%;" />
            </div>
            <div style="margin-top: 10px;margin-bottom: 10px;width:300px;">
            <MudButton @onclick="AddToCart" Variant="Variant.Filled" Class="bg-danger text-light rounded-5" style="font-family:'B Yekan';font-weight:800;width:80%;">
                @if(_shoppingCartService.HasProducts(product.Sku))
                {
                    <span>
                        افزودن به سبد خرید
                        @if(Quantity.HasValue)
                        {
                            <text>@Quantity تا بیشتر!!</text>
                        }
                    </span>
                }
                else
                {
                    <span>
                    اولین خریدت رو انجام بده!!
                    </span>
                }
            </MudButton>
            </div>
         <ul>
            @foreach(var pro in productList)
            {
                <li>
                    <a href="@pro.FullUrl">
                        @pro.Name
                    </a>
                </li>
            }
        </ul>
    </div>
</div>
}

@code {
    public ProductModules? product{get; set;}
    public IList<ProductModules>? productList { get; set; }

    public int? Quantity { get; set; }

    [Parameter]
    public string? slug { get; set; }
}

@functions
{
    protected override void OnInitialized()
    {
        productList = _productServices.GetAll();
        if (!string.IsNullOrEmpty(slug))
        {
            product = _productServices.GetProductBySlug(slug);
        }

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrEmpty(slug))
        {
            product = _productServices.GetProductBySlug(slug);
        }
        base.OnParametersSet();
    }

    public void AddToCart()
    {
        if (product != null)
        {
            _shoppingCartService.AddProduct(product, Quantity ?? 1);
            Quantity = null;
        }
    }
}
